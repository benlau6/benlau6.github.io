---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../FormattedDate.astro";

interface Props {
	content: CollectionEntry<"blog" | "projects">;
}

const {
	content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();
---

{
	data.coverImage && (
		<div class="aspect-h-9 aspect-w-16 mb-6">
			<Image
				alt={data.coverImage.alt}
				class="object-cover"
				fetchpriority="high"
				loading="eager"
				src={data.coverImage.src}
			/>
		</div>
	)
}
{data.draft ? <span class="text-base text-red-500">(Draft)</span> : null}
<h1 class="title text-4xl">
	{data.title}
</h1>
<div class="mt-3 flex flex-wrap items-center gap-x-3 gap-y-2 font-light">
	<p>
		<FormattedDate date={data.publishDate} /> &nbsp;&middot;&nbsp;
		{remarkPluginFrontmatter.minutesRead}
	</p>
	{
		data.updatedDate && (
			<>
				&middot;
				<span class="text-quote">
					Updated:
					<FormattedDate class="ms-1" date={data.updatedDate} />
				</span>
			</>
		)
	}
	{
		data.demo && (
			<>
				&middot;
				<a href={data.demo} class="text-quote underline">
					Demo
				</a>
			</>
		)
	}
	{
		data.github && (
			<>
				&middot;
				<a href={data.github} class="text-quote underline">
					Code
				</a>
			</>
		)
	}
</div>
{
	!!data.tags?.length && (
		<div class="mt-2 flex gap-1">
			{data.tags.map((tag, i) => (
				<>
					<a
						aria-label={`View more blogs with the tag ${tag}`}
						class="cactus-link"
						data-pagefind-filter="tag"
						href={`/tags/${tag}/`}
					>
						#{tag}
					</a>
					<span>{i < data.tags.length - 1 && <>&middot;</>}</span>
				</>
			))}
		</div>
	)
}
