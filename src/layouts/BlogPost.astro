---
import type { CollectionEntry } from "astro:content";
import { siteConfig } from "@/site-config";

import Masthead from "@/components/blog/Masthead.astro";
import TOC from "@/components/blog/TOC.astro";
import WebMentions from "@/components/blog/webmentions/index.astro";
import Comments from "@/components/Comments.astro";

import BaseLayout from "./Base.astro";

interface Props {
	post: CollectionEntry<"blog" | "projects" | "notes">;
}

const { post } = Astro.props;
const {
	data: { description, ogImage, publishDate, title, updatedDate },
	slug,
} = post;
const socialImage = ogImage ?? `/og-image/${slug}.png`;
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString();
const { headings } = await post.render();
---

<BaseLayout meta={{ articleDate, description, ogImage: socialImage, title }}>
	<article
		class="flex-grow flex-col break-words"
		class:list={[{ "flex items-center": siteConfig.centerPost }]}
		data-pagefind-body
	>
		<div
			id="blog-hero"
			class:list={[{ "flex w-full flex-col items-center": siteConfig.centerPost }]}
		>
			<Masthead content={post} />
		</div>
		<!-- pre tag (code block) needs setting max-width and overflow-x-auto to be responsive -->
		<div class="max-w-full gap-x-10 overflow-x-auto lg:flex lg:items-start lg:justify-between">
			{!!headings.length && <TOC headings={headings} />}
			<!-- increase max markdown content width to lg (1024px) -->
			<div
				class="prose prose-cactus mt-12 min-w-64 max-w-screen-md sm:prose-lg prose-headings:font-semibold prose-headings:text-accent-2 prose-headings:before:absolute prose-headings:before:-ms-4 prose-headings:before:text-accent sm:prose-th:before:content-none"
			>
				<slot />
			</div>
		</div>
		<Comments />
		<WebMentions />
	</article>
	<button
		aria-label="Back to Top"
		class="z-90 fixed bottom-12 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-zinc-400 data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12"
		data-show="false"
		id="to-top-btn"
		><svg
			aria-hidden="true"
			class="h-6 w-6"
			fill="none"
			focusable="false"
			stroke="currentColor"
			stroke-width="2"
			viewBox="0 0 24 24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path d="M4.5 15.75l7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round"></path>
		</svg>
	</button>
</BaseLayout>

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
